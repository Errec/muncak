/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}/*! HTML5 Boilerplate v6.1.0 | MIT License | https://html5boilerplate.com/ */html{color:#222;font-size:1em;line-height:1.4}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0;padding:0}audio,canvas,iframe,img,svg,video{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.browserupgrade{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}.hidden{display:none!important}.visuallyhidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.visuallyhidden.focusable:active,.visuallyhidden.focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto;white-space:inherit}.invisible{visibility:hidden}.clearfix:after,.clearfix:before{content:" ";display:table}.clearfix:after{clear:both}@media print{*,:after,:before{background:0 0!important;color:#000!important;-webkit-box-shadow:none!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}a[href^="#"]:after,a[href^="javascript:"]:after{content:""}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}.muncak-btn{background-color:#2870db;padding:28px 70px;border-radius:40px;font-weight:700;font-size:1.4rem;color:#fbfcfc;-webkit-box-shadow:0 21px 28px 1px rgba(40,112,219,.25);box-shadow:0 21px 28px 1px rgba(40,112,219,.25);cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.muncak-btn:hover{-webkit-box-shadow:0 21px 28px 1px rgba(40,112,219,.35);box-shadow:0 21px 28px 1px rgba(40,112,219,.35);background-color:#3e7fdf}.muncak-titles{font-size:2.5rem;color:#35434b}.action-card{position:relative;text-align:left;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.action-card:nth-child(even){-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.action-card__wrapper{position:relative;width:360px;background:#fbfcfc;height:270px;padding:32px 64px;margin-bottom:32px;border-radius:20px;-webkit-box-shadow:0 0 90px -12px rgba(40,112,219,.2);box-shadow:0 0 90px -12px rgba(40,112,219,.2)}.action-card__text-box h2{font-size:1.7rem;margin-bottom:32px;color:#35434b}.action-card__text-box p{font-size:1.2rem;text-align:justify;line-height:1.5;color:#35434b;font-weight:100}.action-card__text-box:after{content:"";position:absolute;left:50%;right:0;top:-40%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);width:100px;height:100px;background-size:cover;background-image:url(../img/header.png)}.number-card{max-width:350px}.number-card__text{text-transform:capitalize;font-size:1.5rem;color:#35434b;margin:0}.number-card__values{color:#1e59b2;font-size:2.6rem;margin:6px 0}.news-card{background-color:#fbfcfc;max-width:350px;height:680px;border-radius:18px;overflow:hidden;-webkit-box-shadow:0 0 80px -10px rgba(40,112,219,.4);box-shadow:0 0 80px -10px rgba(40,112,219,.4)}.news-card__img{height:225px;background-image:url(../img/card01.png);background-repeat:no-repeat;background-size:cover}.news-card__text-box{padding:12px 32px}.news-card__title-box{overflow:hidden;height:150px;text-transform:capitalize}.news-card__title{color:#35434b;font-size:1.7rem;line-height:1.2}.news-card__description-box{overflow:hidden;height:230px}.news-card__description{color:#756d91;font-size:1.3rem}.news-card__more{color:#2870db;cursor:pointer;font-size:1.2rem;font-weight:700;position:relative;top:12px}.header__wrapper{background-color:#1c2056;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__logo{-webkit-box-flex:1;-ms-flex:1;flex:1}.header__list{list-style:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.header__list-item{margin:0 18px;color:#fbfcfc;cursor:pointer;font-weight:700}.header__link{-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s;position:relative}.header__link:after{content:"";left:-10%;right:0;bottom:-120%;position:absolute;width:120%;height:1px;background-color:#fbfcfc;display:none}.header__link:hover:after{display:block}.header__login{background-color:#fbfcfc;padding:9px 34px;border-radius:10px;color:#1c2056;font-weight:700;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.header__login:hover{color:#4850c3;background-color:#fff}.hero__wrapper{margin-top:64px;margin-left:64px;width:400px}.hero__text-box{margin-bottom:128px}.hero__title{font-size:3.2rem;line-height:1;font-weight:700;color:#1c2056}.hero__text{font-size:1.25rem;text-align:justify;line-height:1.8;color:#756d91}.actions__wrapper{padding-top:500px;text-align:center}.actions__title-wrapper{max-width:800px;margin:0 auto;text-align:center}.actions__cards{margin-top:200px;position:relative}.actions__button{position:absolute;bottom:150px;right:100px}.numbers__wrapper{padding-top:140px;text-align:center}.numbers__title-wrapper{max-width:1000px;margin:0 auto}.numbers__title{marker-bottom:100px;margin-bottom:50px}.numbers__cards{padding:0 64px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.numbers__cards *{-webkit-box-flex:1;-ms-flex:1;flex:1}.news__wrapper{padding-top:150px}.news__title-wrapper{margin-bottom:100px;text-align:center}.news__title-wrapper h2{text-transform:capitalize}.news__cards{padding:0 64px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.news__cards *{-webkit-box-flex:1;-ms-flex:1;flex:1}.subscribe__wrapper{background-color:#00f;max-width:1800px;border-radius:16px;padding:32px 240px;text-align:center;margin-top:200px}.subscribe__input{display:block;margin:0 auto;border:none}.subscribe__title-wrapper{color:#fbfcfc;font-size:1.6rem;line-height:1.2;margin:40px 0 74px 0}.subscribe__input[type=email],.subscribe__input[type=text]{background-color:#fbfcfc;width:90%;height:64px;max-width:580px;margin-bottom:44px;border-radius:18px;padding-left:32px;font-size:1.7rem}.subscribe__input[type=submit]{background-color:#00aeff;margin:64px auto 100px auto}.subscribe__input[type=submit]:hover{background-color:#33beff}body{background-color:#fbfcfc;padding:48px 124px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2Uvbm9ybWFsaXplLnNjc3MiLCJtYWluLmNzcyIsImJhc2UvcmVzZXQuc2NzcyIsImNvbXBvbmVudHMvTXVuY2FrQnRuLnNjc3MiLCJjb21wb25lbnRzL011bmNha1RpdGxlcy5zY3NzIiwiY29tcG9uZW50cy9BY3Rpb25DYXJkLnNjc3MiLCJjb21wb25lbnRzL051bWJlckNhcmQuc2NzcyIsImNvbXBvbmVudHMvTmV3c0NhcmQuc2NzcyIsIm1vZHVsZXMvSGVhZGVyLnNjc3MiLCJtb2R1bGVzL0hlcm8uc2NzcyIsIm1vZHVsZXMvQWN0aW9ucy5zY3NzIiwibW9kdWxlcy9OdW1iZXJzLnNjc3MiLCJtb2R1bGVzL05ld3Muc2NzcyIsIm1vZHVsZXMvU3Vic2NyaWJlLnNjc3MiLCJtYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEVBVUEsS0FDRSxZQUFBLEtBQ0EseUJBQUEsS0FVRixLQUNFLE9BQUEsRUFPRixLQUNFLFFBQUEsTUFRRixHQUNFLFVBQUEsSUFDQSxPQUFBLE1BQUEsRUFXRixHQUNFLG1CQUFBLFlBQUEsV0FBQSxZQUNBLE9BQUEsRUFDQSxTQUFBLFFBUUYsSUFDRSxZQUFBLFNBQUEsQ0FBQSxVQUNBLFVBQUEsSUFVRixFQUNFLGlCQUFBLFlBUUYsWUFDRSxjQUFBLEtBQ0EsZ0JBQUEsVUFDQSx3QkFBQSxVQUFBLE9BQUEsZ0JBQUEsVUFBQSxPQU9GLEVDVEEsT0RXRSxZQUFBLE9BUUYsS0NYQSxJQUNBLEtEYUUsWUFBQSxTQUFBLENBQUEsVUFDQSxVQUFBLElBT0YsTUFDRSxVQUFBLElBUUYsSUNiQSxJRGVFLFVBQUEsSUFDQSxZQUFBLEVBQ0EsU0FBQSxTQUNBLGVBQUEsU0FHRixJQUNFLE9BQUEsT0FHRixJQUNFLElBQUEsTUFVRixJQUNFLGFBQUEsS0FXRixPQ3JCQSxNQUNBLFNBQ0EsT0FDQSxTRHVCRSxZQUFBLFFBQ0EsVUFBQSxLQUNBLFlBQUEsS0FDQSxPQUFBLEVBUUYsT0NuQkEsTURxQkUsU0FBQSxRQVFGLE9DcEJBLE9Ec0JFLGVBQUEsS0NkRixjQUNBLGFBQ0EsY0RtQkEsT0FJRSxtQkFBQSxPQ2hCRixnQ0FDQSwrQkFDQSxnQ0RxQkEseUJBSUUsYUFBQSxLQUNBLFFBQUEsRUNsQkYsNkJBQ0EsNEJBQ0EsNkJEdUJBLHNCQUlFLFFBQUEsSUFBQSxPQUFBLFdBT0YsU0FDRSxRQUFBLE1BQUEsTUFBQSxPQVVGLE9BQ0UsbUJBQUEsV0FBQSxXQUFBLFdBQ0EsTUFBQSxRQUNBLFFBQUEsTUFDQSxVQUFBLEtBQ0EsUUFBQSxFQUNBLFlBQUEsT0FPRixTQUNFLGVBQUEsU0FPRixTQUNFLFNBQUEsS0N4QkYsZ0JBSUEsYUQ4QkUsbUJBQUEsV0FBQSxXQUFBLFdBQ0EsUUFBQSxFQ3pCRix5Q0FLQSx5Q0Q2QkUsT0FBQSxLQzFCRixjRG1DRSxtQkFBQSxVQUNBLGVBQUEsS0MzQkYseUNEbUNFLG1CQUFBLEtBUUYsNkJBQ0UsbUJBQUEsT0FDQSxLQUFBLFFBVUYsUUFDRSxRQUFBLE1BT0YsUUFDRSxRQUFBLFVBVUYsU0FDRSxRQUFBLEtDckNGLFNENkNFLFFBQUEsS0UzVkYsNkVBY0csS0FDQyxNQUFBLEtBQ0EsVUFBQSxJQUNBLFlBQUEsSUFhSixpQkFDSSxXQUFBLFFBQ0EsWUFBQSxLQUdKLFlBQ0ksV0FBQSxRQUNBLFlBQUEsS0FPSixHQUNJLFFBQUEsTUFDQSxPQUFBLElBQ0EsT0FBQSxFQUNBLFdBQUEsSUFBQSxNQUFBLEtBQ0EsT0FBQSxJQUFBLEVBQ0EsUUFBQSxFQVNKLE1EMlNBLE9BQ0EsT0FDQSxJQUNBLElBQ0EsTUN6U0ksZUFBQSxPQU9KLFNBQ0ksT0FBQSxFQUNBLE9BQUEsRUFDQSxRQUFBLEVBT0osU0FDSSxPQUFBLFNBT0osZ0JBQ0ksT0FBQSxLQUFBLEVBQ0EsV0FBQSxLQUNBLE1BQUEsS0FDQSxRQUFBLEtBQUEsRUFpQ0gsUUFDQyxRQUFBLGVBWUYsZ0JBQ0UsT0FBQSxFQUNBLEtBQUEsY0FDQSxPQUFBLElBQ0EsT0FBQSxLQUNBLFNBQUEsT0FDQSxRQUFBLEVBQ0EsU0FBQSxTQUNBLE1BQUEsSUFDQSxZQUFBLE9BU0YsaUNENFFBLGdDQzFRRSxLQUFBLEtBQ0EsT0FBQSxLQUNBLE9BQUEsRUFDQSxTQUFBLFFBQ0EsU0FBQSxPQUNBLE1BQUEsS0FDQSxZQUFBLFFBT0YsV0FDRSxXQUFBLE9EdVJGLGdCQ3hRQSxpQkFFRSxRQUFBLElBQ0EsUUFBQSxNQUdGLGdCQUNFLE1BQUEsS0E0QkMsYUFDQyxFRGdRRixPQURBLFFDNVBNLFdBQUEsY0FDQSxNQUFBLGVBQ0EsbUJBQUEsZUFDQSxXQUFBLGVBQ0EsWUFBQSxlQUdKLEVEOFBGLFVDNVBNLGdCQUFBLFVBR0osY0FDSSxRQUFBLEtBQUEsV0FBQSxJQUdKLGtCQUNJLFFBQUEsS0FBQSxZQUFBLElBUUosbUJEdVBGLDZCQ3JQTSxRQUFBLEdBR0osSUFDSSxZQUFBLG1CRHNQTixXQ3BQRSxJQUVJLE9BQUEsSUFBQSxNQUFBLEtBQ0Esa0JBQUEsTUFRSixNQUNJLFFBQUEsbUJEa1BOLElDL09FLEdBRUksa0JBQUEsTURnUE4sR0FDQSxHQzlPRSxFQUdJLFFBQUEsRUFDQSxPQUFBLEVBR0osR0QyT0YsR0N6T00saUJBQUEsT0NsU1IsWUFDRSxpQkFBQSxRQUNBLFFBQUEsS0FBQSxLQUNBLGNBQUEsS0FDQSxZQUFBLElBQ0EsVUFBQSxPQUNBLE1BQUEsUUFDQSxtQkFBQSxFQUFBLEtBQUEsS0FBQSxJQUFBLHFCQUFBLFdBQUEsRUFBQSxLQUFBLEtBQUEsSUFBQSxxQkFDQSxPQUFBLFFBQ0EsbUJBQUEsSUFBQSxJQUFBLFlBQUEsY0FBQSxJQUFBLElBQUEsWUFBQSxXQUFBLElBQUEsSUFBQSxZQVRGLGtCQVdJLG1CQUFBLEVBQUEsS0FBQSxLQUFBLElBQUEscUJBQUEsV0FBQSxFQUFBLEtBQUEsS0FBQSxJQUFBLHFCQUNBLGlCQUFBLFFDWkosZUFDRSxVQUFBLE9BQ0EsTUFBQSxRQ0ZGLGFBQ0UsU0FBQSxTQUNBLFdBQUEsS0FDQSxNQUFBLEtBQ0UsUUFBQSxZQUFBLFFBQUEsWUFBQSxRQUFBLEtBQ0EsaUJBQUEsTUFBQSxjQUFBLE1BQUEsZ0JBQUEsV0FMSiw2QkFPSSxpQkFBQSxJQUFBLGNBQUEsSUFBQSxnQkFBQSxTQUdKLHNCQUNFLFNBQUEsU0FDQSxNQUFBLE1BQ0EsV0FBQSxRQUNBLE9BQUEsTUFDQSxRQUFBLEtBQUEsS0FDQSxjQUFBLEtBQ0EsY0FBQSxLQUNBLG1CQUFBLEVBQUEsRUFBQSxLQUFBLE1BQUEsb0JBQUEsV0FBQSxFQUFBLEVBQUEsS0FBQSxNQUFBLG9CQUdGLDBCQUVJLFVBQUEsT0FDQSxjQUFBLEtBQ0EsTUFBQSxRQUpKLHlCQU9JLFVBQUEsT0FDQSxXQUFBLFFBQ0EsWUFBQSxJQUNBLE1BQUEsUUFDQSxZQUFBLElBWEosNkJBY0ksUUFBQSxHQUNBLFNBQUEsU0FDQSxLQUFBLElBQ0EsTUFBQSxFQUNBLElBQUEsS0FDQSxrQkFBQSxpQkFBQSxjQUFBLGlCQUFBLFVBQUEsaUJBQ0EsTUFBQSxNQUNBLE9BQUEsTUFFQSxnQkFBQSxNQUNBLGlCQUFBLHVCQzdDSixhQUNFLFVBQUEsTUFHRixtQkFDRSxlQUFBLFdBQ0EsVUFBQSxPQUNBLE1BQUEsUUFDQSxPQUFBLEVBR0YscUJBQ0UsTUFBQSxRQUNBLFVBQUEsT0FDQSxPQUFBLElBQUEsRUNkRixXQUNFLGlCQUFBLFFBQ0EsVUFBQSxNQUNBLE9BQUEsTUFDQSxjQUFBLEtBQ0EsU0FBQSxPQUNBLG1CQUFBLEVBQUEsRUFBQSxLQUFBLE1BQUEsb0JBQUEsV0FBQSxFQUFBLEVBQUEsS0FBQSxNQUFBLG9CQUdGLGdCQUNFLE9BQUEsTUFDQSxpQkFBQSx1QkFDQSxrQkFBQSxVQUNBLGdCQUFBLE1BR0YscUJBQ0UsUUFBQSxLQUFBLEtBT0Ysc0JBQ0UsU0FBQSxPQUNBLE9BQUEsTUFDQSxlQUFBLFdBR0Ysa0JBQ0UsTUFBQSxRQUNBLFVBQUEsT0FDQSxZQUFBLElBT0YsNEJBQ0UsU0FBQSxPQUNBLE9BQUEsTUFHRix3QkFDRSxNQUFBLFFBQ0EsVUFBQSxPQUdGLGlCQUNFLE1BQUEsUUFDQSxPQUFBLFFBQ0EsVUFBQSxPQUNBLFlBQUEsSUFDQSxTQUFBLFNBQ0EsSUFBQSxLQ3hERixpQkFDRSxpQkFBQSxRQUNBLFFBQUEsWUFBQSxRQUFBLFlBQUEsUUFBQSxLQUNBLGtCQUFBLE9BQUEsZUFBQSxPQUFBLFlBQUEsT0FHRixjQUNFLGlCQUFBLEVBQUEsU0FBQSxFQUFBLEtBQUEsRUFHRixjQUNFLFdBQUEsS0FDQSxRQUFBLFlBQUEsUUFBQSxZQUFBLFFBQUEsS0FDQSxtQkFBQSxXQUFBLHNCQUFBLE9BQUEsbUJBQUEsSUFBQSxlQUFBLElBRUYsbUJBQ0UsT0FBQSxFQUFBLEtBQ0EsTUFBQSxRQUNBLE9BQUEsUUFDQSxZQUFBLElBRUYsY0FDRSxtQkFBQSxJQUFBLElBQUEsY0FBQSxJQUFBLElBQUEsV0FBQSxJQUFBLElBQ0EsU0FBQSxTQUZGLG9CQUlJLFFBQUEsR0FDQSxLQUFBLEtBQ0EsTUFBQSxFQUNBLE9BQUEsTUFDQSxTQUFBLFNBQ0EsTUFBQSxLQUNBLE9BQUEsSUFDQSxpQkFBQSxRQUNBLFFBQUEsS0FaSiwwQkFnQk0sUUFBQSxNQUlOLGVBQ0UsaUJBQUEsUUFDQSxRQUFBLElBQUEsS0FDQSxjQUFBLEtBQ0EsTUFBQSxRQUNBLFlBQUEsSUFLQSxtQkFBQSxJQUFBLElBQUEsY0FBQSxJQUFBLElBQUEsV0FBQSxJQUFBLElBVkYscUJBT0ksTUFBQSxRQUNBLGlCQUFBLEtDakRKLGVBQ0UsV0FBQSxLQUNBLFlBQUEsS0FDQSxNQUFBLE1BRUYsZ0JBQ0UsY0FBQSxNQUVGLGFBQ0UsVUFBQSxPQUNBLFlBQUEsRUFDQSxZQUFBLElBQ0EsTUFBQSxRQUVGLFlBQ0UsVUFBQSxRQUNBLFdBQUEsUUFDQSxZQUFBLElBQ0EsTUFBQSxRQ2xCRixrQkFDRSxZQUFBLE1BQ0EsV0FBQSxPQUVGLHdCQUNFLFVBQUEsTUFDQSxPQUFBLEVBQUEsS0FDQSxXQUFBLE9BRUYsZ0JBQ0UsV0FBQSxNQUNBLFNBQUEsU0FFRixpQkFDRSxTQUFBLFNBQ0EsT0FBQSxNQUNBLE1BQUEsTUNoQkYsa0JBQ0UsWUFBQSxNQUNBLFdBQUEsT0FHRix3QkFDRSxVQUFBLE9BQ0EsT0FBQSxFQUFBLEtBR0YsZ0JBQ0UsY0FBQSxNQUNBLGNBQUEsS0FHRixnQkFDRSxRQUFBLEVBQUEsS0FDQSxRQUFBLFlBQUEsUUFBQSxZQUFBLFFBQUEsS0FDQSxtQkFBQSxXQUFBLHNCQUFBLE9BQUEsbUJBQUEsSUFBQSxlQUFBLElBQ0EsY0FBQSxLQUFBLFVBQUEsS0FDQSxpQkFBQSxRQUFBLGNBQUEsUUFBQSxnQkFBQSxjQUxGLGtCQU9JLGlCQUFBLEVBQUEsU0FBQSxFQUFBLEtBQUEsRUN0QkosZUFDRSxZQUFBLE1BRUYscUJBQ0UsY0FBQSxNQUNBLFdBQUEsT0FGRix3QkFJSSxlQUFBLFdBR0osYUFDRSxRQUFBLEVBQUEsS0FDQSxRQUFBLFlBQUEsUUFBQSxZQUFBLFFBQUEsS0FDQSxtQkFBQSxXQUFBLHNCQUFBLE9BQUEsbUJBQUEsSUFBQSxlQUFBLElBQ0EsY0FBQSxLQUFBLFVBQUEsS0FDQSxpQkFBQSxRQUFBLGNBQUEsUUFBQSxnQkFBQSxjQUxGLGVBT0ksaUJBQUEsRUFBQSxTQUFBLEVBQUEsS0FBQSxFQ2pCSixvQkFDRSxpQkFBQSxLQUNBLFVBQUEsT0FDQSxjQUFBLEtBQ0EsUUFBQSxLQUFBLE1BQ0EsV0FBQSxPQUNBLFdBQUEsTUFHRixrQkFDRSxRQUFBLE1BQ0EsT0FBQSxFQUFBLEtBQ0EsT0FBQSxLQUdGLDBCQUNFLE1BQUEsUUFDQSxVQUFBLE9BQ0EsWUFBQSxJQUNBLE9BQUEsS0FBQSxFQUFBLEtBQUEsRVp5ekJGLDhCWXR6QkEsNkJBRUUsaUJBQUEsUUFDQSxNQUFBLElBQ0EsT0FBQSxLQUNBLFVBQUEsTUFDQSxjQUFBLEtBQ0EsY0FBQSxLQUNBLGFBQUEsS0FDQSxVQUFBLE9BRUYsK0JBQ0UsaUJBQUEsUUFDQSxPQUFBLEtBQUEsS0FBQSxNQUFBLEtBRkYscUNBSUksaUJBQUEsUUNwQkosS0FDRSxpQkFBQSxRQUNBLFFBQUEsS0FBQSIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyohIEhUTUw1IEJvaWxlcnBsYXRlIHY2LjEuMCB8IE1JVCBMaWNlbnNlIHwgaHR0cHM6Ly9odG1sNWJvaWxlcnBsYXRlLmNvbS8gKi9cbi8qIG1haW4uY3NzIDEuMC4wIHwgTUlUIExpY2Vuc2UgfCBodHRwczovL2dpdGh1Yi5jb20vaDVicC9tYWluLmNzcyNyZWFkbWUgKi9cbi8qXHJcbiAqIFdoYXQgZm9sbG93cyBpcyB0aGUgcmVzdWx0IG9mIG11Y2ggcmVzZWFyY2ggb24gY3Jvc3MtYnJvd3NlciBzdHlsaW5nLlxyXG4gKiBDcmVkaXQgbGVmdCBpbmxpbmUgYW5kIGJpZyB0aGFua3MgdG8gTmljb2xhcyBHYWxsYWdoZXIsIEpvbmF0aGFuIE5lYWwsXHJcbiAqIEtyb2MgQ2FtZW4sIGFuZCB0aGUgSDVCUCBkZXYgY29tbXVuaXR5IGFuZCB0ZWFtLlxyXG4gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIEJhc2Ugc3R5bGVzOiBvcGluaW9uYXRlZCBkZWZhdWx0c1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuaHRtbCB7XG4gIGNvbG9yOiAjMjIyO1xuICBmb250LXNpemU6IDFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDsgfVxuXG4vKlxyXG4gKiBSZW1vdmUgdGV4dC1zaGFkb3cgaW4gc2VsZWN0aW9uIGhpZ2hsaWdodDpcclxuICogaHR0cHM6Ly90d2l0dGVyLmNvbS9taWtldGF5bHIvc3RhdHVzLzEyMjI4ODA1MzAxXHJcbiAqXHJcbiAqIFZlbmRvci1wcmVmaXhlZCBhbmQgcmVndWxhciA6OnNlbGVjdGlvbiBzZWxlY3RvcnMgY2Fubm90IGJlIGNvbWJpbmVkOlxyXG4gKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTY5ODI1MTAvNzEzMzQ3MVxyXG4gKlxyXG4gKiBDdXN0b21pemUgdGhlIGJhY2tncm91bmQgY29sb3IgdG8gbWF0Y2ggeW91ciBkZXNpZ24uXHJcbiAqL1xuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogI2IzZDRmYztcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuLypcclxuICogQSBiZXR0ZXIgbG9va2luZyBkZWZhdWx0IGhvcml6b250YWwgcnVsZVxyXG4gKi9cbmhyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMXB4O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xuICBtYXJnaW46IDFlbSAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qXHJcbiAqIFJlbW92ZSB0aGUgZ2FwIGJldHdlZW4gYXVkaW8sIGNhbnZhcywgaWZyYW1lcyxcclxuICogaW1hZ2VzLCB2aWRlb3MgYW5kIHRoZSBib3R0b20gb2YgdGhlaXIgY29udGFpbmVyczpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvaXNzdWVzLzQ0MFxyXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxuaWZyYW1lLFxuaW1nLFxuc3ZnLFxudmlkZW8ge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi8qXHJcbiAqIFJlbW92ZSBkZWZhdWx0IGZpZWxkc2V0IHN0eWxlcy5cclxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qXHJcbiAqIEFsbG93IG9ubHkgdmVydGljYWwgcmVzaXppbmcgb2YgdGV4dGFyZWFzLlxyXG4gKi9cbnRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBCcm93c2VyIFVwZ3JhZGUgUHJvbXB0XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4uYnJvd3NlcnVwZ3JhZGUge1xuICBtYXJnaW46IDAuMmVtIDA7XG4gIGJhY2tncm91bmQ6ICNjY2M7XG4gIGNvbG9yOiAjMDAwO1xuICBwYWRkaW5nOiAwLjJlbSAwOyB9XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIEF1dGhvcidzIGN1c3RvbSBzdHlsZXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIEhlbHBlciBjbGFzc2VzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxyXG4gKiBIaWRlIHZpc3VhbGx5IGFuZCBmcm9tIHNjcmVlbiByZWFkZXJzXHJcbiAqL1xuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuXG4vKlxyXG4qIEhpZGUgb25seSB2aXN1YWxseSwgYnV0IGhhdmUgaXQgYXZhaWxhYmxlIGZvciBzY3JlZW4gcmVhZGVyczpcclxuKiBodHRwczovL3Nub29rLmNhL2FyY2hpdmVzL2h0bWxfYW5kX2Nzcy9oaWRpbmctY29udGVudC1mb3ItYWNjZXNzaWJpbGl0eVxyXG4qXHJcbiogMS4gRm9yIGxvbmcgY29udGVudCwgbGluZSBmZWVkcyBhcmUgbm90IGludGVycHJldGVkIGFzIHNwYWNlcyBhbmQgc21hbGwgd2lkdGhcclxuKiAgICBjYXVzZXMgY29udGVudCB0byB3cmFwIDEgd29yZCBwZXIgbGluZTpcclxuKiAgICBodHRwczovL21lZGl1bS5jb20vQGplc3NlYmVhY2gvYmV3YXJlLXNtdXNoZWQtb2ZmLXNjcmVlbi1hY2Nlc3NpYmxlLXRleHQtNTk1MmE0YzJjYmZlXHJcbiovXG4udmlzdWFsbHloaWRkZW4ge1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgLyogMSAqLyB9XG5cbi8qXHJcbiogRXh0ZW5kcyB0aGUgLnZpc3VhbGx5aGlkZGVuIGNsYXNzIHRvIGFsbG93IHRoZSBlbGVtZW50XHJcbiogdG8gYmUgZm9jdXNhYmxlIHdoZW4gbmF2aWdhdGVkIHRvIHZpYSB0aGUga2V5Ym9hcmQ6XHJcbiogaHR0cHM6Ly93d3cuZHJ1cGFsLm9yZy9ub2RlLzg5NzYzOFxyXG4qL1xuLnZpc3VhbGx5aGlkZGVuLmZvY3VzYWJsZTphY3RpdmUsXG4udmlzdWFsbHloaWRkZW4uZm9jdXNhYmxlOmZvY3VzIHtcbiAgY2xpcDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXJnaW46IDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBwb3NpdGlvbjogc3RhdGljO1xuICB3aWR0aDogYXV0bztcbiAgd2hpdGUtc3BhY2U6IGluaGVyaXQ7IH1cblxuLypcclxuKiBIaWRlIHZpc3VhbGx5IGFuZCBmcm9tIHNjcmVlbiByZWFkZXJzLCBidXQgbWFpbnRhaW4gbGF5b3V0XHJcbiovXG4uaW52aXNpYmxlIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuOyB9XG5cbi8qXHJcbiogQ2xlYXJmaXg6IGNvbnRhaW4gZmxvYXRzXHJcbipcclxuKiBGb3IgbW9kZXJuIGJyb3dzZXJzXHJcbiogMS4gVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGVcclxuKiAgICBgY29udGVudGVkaXRhYmxlYCBhdHRyaWJ1dGUgaXMgaW5jbHVkZWQgYW55d2hlcmUgZWxzZSBpbiB0aGUgZG9jdW1lbnQuXHJcbiogICAgT3RoZXJ3aXNlIGl0IGNhdXNlcyBzcGFjZSB0byBhcHBlYXIgYXQgdGhlIHRvcCBhbmQgYm90dG9tIG9mIGVsZW1lbnRzXHJcbiogICAgdGhhdCByZWNlaXZlIHRoZSBgY2xlYXJmaXhgIGNsYXNzLlxyXG4qIDIuIFRoZSB1c2Ugb2YgYHRhYmxlYCByYXRoZXIgdGhhbiBgYmxvY2tgIGlzIG9ubHkgbmVjZXNzYXJ5IGlmIHVzaW5nXHJcbiogICAgYDpiZWZvcmVgIHRvIGNvbnRhaW4gdGhlIHRvcC1tYXJnaW5zIG9mIGNoaWxkIGVsZW1lbnRzLlxyXG4qL1xuLmNsZWFyZml4OmJlZm9yZSxcbi5jbGVhcmZpeDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICAvKiAxICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAyICovIH1cblxuLmNsZWFyZml4OmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgRVhBTVBMRSBNZWRpYSBRdWVyaWVzIGZvciBSZXNwb25zaXZlIERlc2lnbi5cclxuICAgVGhlc2UgZXhhbXBsZXMgb3ZlcnJpZGUgdGhlIHByaW1hcnkgKCdtb2JpbGUgZmlyc3QnKSBzdHlsZXMuXHJcbiAgIE1vZGlmeSBhcyBjb250ZW50IHJlcXVpcmVzLlxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzNWVtKSB7XG4gIC8qIFN0eWxlIGFkanVzdG1lbnRzIGZvciB2aWV3cG9ydHMgdGhhdCBtZWV0IHRoZSBjb25kaXRpb24gKi8gfVxuXG5AbWVkaWEgcHJpbnQsICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuMjUpLCAobWluLXJlc29sdXRpb246IDEuMjVkcHB4KSwgKG1pbi1yZXNvbHV0aW9uOiAxMjBkcGkpIHtcbiAgLyogU3R5bGUgYWRqdXN0bWVudHMgZm9yIGhpZ2ggcmVzb2x1dGlvbiBkZXZpY2VzICovIH1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgUHJpbnQgc3R5bGVzLlxyXG4gICBJbmxpbmVkIHRvIGF2b2lkIHRoZSBhZGRpdGlvbmFsIEhUVFAgcmVxdWVzdDpcclxuICAgaHR0cHM6Ly93d3cucGhwaWVkLmNvbS9kZWxheS1sb2FkaW5nLXlvdXItcHJpbnQtY3NzL1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuQG1lZGlhIHByaW50IHtcbiAgKixcbiAgKjpiZWZvcmUsXG4gICo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICAvKiBCbGFjayBwcmludHMgZmFzdGVyICovXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7IH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjsgfVxuICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiOyB9XG4gIC8qXHJcbiAgICAgKiBEb24ndCBzaG93IGxpbmtzIHRoYXQgYXJlIGZyYWdtZW50IGlkZW50aWZpZXJzLFxyXG4gICAgICogb3IgdXNlIHRoZSBgamF2YXNjcmlwdDpgIHBzZXVkbyBwcm90b2NvbFxyXG4gICAgICovXG4gIGFbaHJlZl49XCIjXCJdOmFmdGVyLFxuICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgcHJlIHtcbiAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXAgIWltcG9ydGFudDsgfVxuICBwcmUsXG4gIGJsb2NrcXVvdGUge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkOyB9XG4gIC8qXHJcbiAgICAgKiBQcmludGluZyBUYWJsZXM6XHJcbiAgICAgKiBodHRwOi8vY3NzLWRpc2N1c3MuaW5jdXRpby5jb20vd2lraS9QcmludGluZ19UYWJsZXNcclxuICAgICAqL1xuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOyB9XG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICBwLFxuICBoMixcbiAgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzOyB9XG4gIGgyLFxuICBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7IH0gfVxuXG4ubXVuY2FrLWJ0biB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyODcwZGI7XG4gIHBhZGRpbmc6IDI4cHggNzBweDtcbiAgYm9yZGVyLXJhZGl1czogNDBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBjb2xvcjogI2ZiZmNmYztcbiAgYm94LXNoYWRvdzogMHB4IDIxcHggMjhweCAxcHggcmdiYSg0MCwgMTEyLCAyMTksIDAuMjUpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0OyB9XG4gIC5tdW5jYWstYnRuOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAwcHggMjFweCAyOHB4IDFweCByZ2JhKDQwLCAxMTIsIDIxOSwgMC4zNSk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNlN2ZkZjsgfVxuXG4ubXVuY2FrLXRpdGxlcyB7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBjb2xvcjogIzM1NDM0YjsgfVxuXG4uYWN0aW9uLWNhcmQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgLmFjdGlvbi1jYXJkOm50aC1jaGlsZChldmVuKSB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuXG4uYWN0aW9uLWNhcmRfX3dyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAzNjBweDtcbiAgYmFja2dyb3VuZDogI2ZiZmNmYztcbiAgaGVpZ2h0OiAyNzBweDtcbiAgcGFkZGluZzogMzJweCA2NHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMnB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwcHggMHB4IDkwcHggLTEycHggcmdiYSg0MCwgMTEyLCAyMTksIDAuMik7IH1cblxuLmFjdGlvbi1jYXJkX190ZXh0LWJveCBoMiB7XG4gIGZvbnQtc2l6ZTogMS43cmVtO1xuICBtYXJnaW4tYm90dG9tOiAzMnB4O1xuICBjb2xvcjogIzM1NDM0YjsgfVxuXG4uYWN0aW9uLWNhcmRfX3RleHQtYm94IHAge1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgY29sb3I6ICMzNTQzNGI7XG4gIGZvbnQtd2VpZ2h0OiAxMDA7IH1cblxuLmFjdGlvbi1jYXJkX190ZXh0LWJveDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICByaWdodDogMDtcbiAgdG9wOiAtNDAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIHdpZHRoOiAxMDBweDtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2hlYWRlci5wbmdcIik7IH1cblxuLm51bWJlci1jYXJkIHtcbiAgbWF4LXdpZHRoOiAzNTBweDsgfVxuXG4ubnVtYmVyLWNhcmRfX3RleHQge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGNvbG9yOiAjMzU0MzRiO1xuICBtYXJnaW46IDA7IH1cblxuLm51bWJlci1jYXJkX192YWx1ZXMge1xuICBjb2xvcjogIzFlNTliMjtcbiAgZm9udC1zaXplOiAyLjZyZW07XG4gIG1hcmdpbjogNnB4IDA7IH1cblxuLm5ld3MtY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYmZjZmM7XG4gIG1heC13aWR0aDogMzUwcHg7XG4gIGhlaWdodDogNjgwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDE4cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJveC1zaGFkb3c6IDBweCAwcHggODBweCAtMTBweCByZ2JhKDQwLCAxMTIsIDIxOSwgMC40KTsgfVxuXG4ubmV3cy1jYXJkX19pbWcge1xuICBoZWlnaHQ6IDIyNXB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvY2FyZDAxLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuXG4ubmV3cy1jYXJkX190ZXh0LWJveCB7XG4gIHBhZGRpbmc6IDEycHggMzJweDsgfVxuXG4vKlxuVXNlIGZyb250LWVuZCBvciBiYWNrLWVuZCBKUyBoZXJlIGZvciB0ZXh0IGJldHRlciBwcmVzZW50YXRpb24gXG53aXRoIG1heCBudW1iZXIgb2YgY2hhcmFjdGVycyBhbmQgZWxsaXBzZXNcbiovXG4ubmV3cy1jYXJkX190aXRsZS1ib3gge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBoZWlnaHQ6IDE1MHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsgfVxuXG4ubmV3cy1jYXJkX190aXRsZSB7XG4gIGNvbG9yOiAjMzU0MzRiO1xuICBmb250LXNpemU6IDEuN3JlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuXG4vKlxuVXNlIGZyb250LWVuZCBvciBiYWNrLWVuZCBKUyBoZXJlIGZvciB0ZXh0IGJldHRlciBwcmVzZW50YXRpb24gXG53aXRoIG1heCBudW1iZXIgb2YgY2hhcmFjdGVycyBhbmQgZWxsaXBzZXNcbiovXG4ubmV3cy1jYXJkX19kZXNjcmlwdGlvbi1ib3gge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBoZWlnaHQ6IDIzMHB4OyB9XG5cbi5uZXdzLWNhcmRfX2Rlc2NyaXB0aW9uIHtcbiAgY29sb3I6ICM3NTZkOTE7XG4gIGZvbnQtc2l6ZTogMS4zcmVtOyB9XG5cbi5uZXdzLWNhcmRfX21vcmUge1xuICBjb2xvcjogIzI4NzBkYjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAxMnB4OyB9XG5cbi5oZWFkZXJfX3dyYXBwZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWMyMDU2O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5oZWFkZXJfX2xvZ28ge1xuICBmbGV4OiAxOyB9XG5cbi5oZWFkZXJfX2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XG5cbi5oZWFkZXJfX2xpc3QtaXRlbSB7XG4gIG1hcmdpbjogMCAxOHB4O1xuICBjb2xvcjogI2ZiZmNmYztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4uaGVhZGVyX19saW5rIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaGVhZGVyX19saW5rOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGxlZnQ6IC0xMCU7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAtMTIwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEyMCU7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZiZmNmYztcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5oZWFkZXJfX2xpbms6aG92ZXI6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5oZWFkZXJfX2xvZ2luIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZiZmNmYztcbiAgcGFkZGluZzogOXB4IDM0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGNvbG9yOiAjMWMyMDU2O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnM7IH1cbiAgLmhlYWRlcl9fbG9naW46aG92ZXIge1xuICAgIGNvbG9yOiAjNDg1MGMzO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB9XG5cbi5oZXJvX193cmFwcGVyIHtcbiAgbWFyZ2luLXRvcDogNjRweDtcbiAgbWFyZ2luLWxlZnQ6IDY0cHg7XG4gIHdpZHRoOiA0MDBweDsgfVxuXG4uaGVyb19fdGV4dC1ib3gge1xuICBtYXJnaW4tYm90dG9tOiAxMjhweDsgfVxuXG4uaGVyb19fdGl0bGUge1xuICBmb250LXNpemU6IDMuMnJlbTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzFjMjA1NjsgfVxuXG4uaGVyb19fdGV4dCB7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgbGluZS1oZWlnaHQ6IDEuODtcbiAgY29sb3I6ICM3NTZkOTE7IH1cblxuLmFjdGlvbnNfX3dyYXBwZXIge1xuICBwYWRkaW5nLXRvcDogNTAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uYWN0aW9uc19fdGl0bGUtd3JhcHBlciB7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLmFjdGlvbnNfX2NhcmRzIHtcbiAgbWFyZ2luLXRvcDogMjAwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4uYWN0aW9uc19fYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDE1MHB4O1xuICByaWdodDogMTAwcHg7IH1cblxuLm51bWJlcnNfX3dyYXBwZXIge1xuICBwYWRkaW5nLXRvcDogMTQwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ubnVtYmVyc19fdGl0bGUtd3JhcHBlciB7XG4gIG1heC13aWR0aDogMTAwMHB4O1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG4ubnVtYmVyc19fdGl0bGUge1xuICBtYXJrZXItYm90dG9tOiAxMDBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDsgfVxuXG4ubnVtYmVyc19fY2FyZHMge1xuICBwYWRkaW5nOiAwIDY0cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gIC5udW1iZXJzX19jYXJkcyAqIHtcbiAgICBmbGV4OiAxOyB9XG5cbi5uZXdzX193cmFwcGVyIHtcbiAgcGFkZGluZy10b3A6IDE1MHB4OyB9XG5cbi5uZXdzX190aXRsZS13cmFwcGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMTAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAubmV3c19fdGl0bGUtd3JhcHBlciBoMiB7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7IH1cblxuLm5ld3NfX2NhcmRzIHtcbiAgcGFkZGluZzogMCA2NHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICAubmV3c19fY2FyZHMgKiB7XG4gICAgZmxleDogMTsgfVxuXG4uc3Vic2NyaWJlX193cmFwcGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcbiAgbWF4LXdpZHRoOiAxODAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIHBhZGRpbmc6IDMycHggMjQwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwcHg7IH1cblxuLnN1YnNjcmliZV9faW5wdXQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJvcmRlcjogbm9uZTsgfVxuXG4uc3Vic2NyaWJlX190aXRsZS13cmFwcGVyIHtcbiAgY29sb3I6ICNmYmZjZmM7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBsaW5lLWhlaWdodDogMS4yO1xuICBtYXJnaW46IDQwcHggMCA3NHB4IDA7IH1cblxuLnN1YnNjcmliZV9faW5wdXRbdHlwZT1cInRleHRcIl0sXG4uc3Vic2NyaWJlX19pbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJmY2ZjO1xuICB3aWR0aDogOTAlO1xuICBoZWlnaHQ6IDY0cHg7XG4gIG1heC13aWR0aDogNTgwcHg7XG4gIG1hcmdpbi1ib3R0b206IDQ0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDE4cHg7XG4gIHBhZGRpbmctbGVmdDogMzJweDtcbiAgZm9udC1zaXplOiAxLjdyZW07IH1cblxuLnN1YnNjcmliZV9faW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMGFlZmY7XG4gIG1hcmdpbjogNjRweCBhdXRvIDEwMHB4IGF1dG87IH1cbiAgLnN1YnNjcmliZV9faW5wdXRbdHlwZT1cInN1Ym1pdFwiXTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzYmVmZjsgfVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZiZmNmYztcbiAgcGFkZGluZzogNDhweCAxMjRweDsgfVxuIiwiLyohIEhUTUw1IEJvaWxlcnBsYXRlIHY2LjEuMCB8IE1JVCBMaWNlbnNlIHwgaHR0cHM6Ly9odG1sNWJvaWxlcnBsYXRlLmNvbS8gKi9cclxuXHJcbi8qIG1haW4uY3NzIDEuMC4wIHwgTUlUIExpY2Vuc2UgfCBodHRwczovL2dpdGh1Yi5jb20vaDVicC9tYWluLmNzcyNyZWFkbWUgKi9cclxuLypcclxuICogV2hhdCBmb2xsb3dzIGlzIHRoZSByZXN1bHQgb2YgbXVjaCByZXNlYXJjaCBvbiBjcm9zcy1icm93c2VyIHN0eWxpbmcuXHJcbiAqIENyZWRpdCBsZWZ0IGlubGluZSBhbmQgYmlnIHRoYW5rcyB0byBOaWNvbGFzIEdhbGxhZ2hlciwgSm9uYXRoYW4gTmVhbCxcclxuICogS3JvYyBDYW1lbiwgYW5kIHRoZSBINUJQIGRldiBjb21tdW5pdHkgYW5kIHRlYW0uXHJcbiAqL1xyXG5cclxuIFxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBCYXNlIHN0eWxlczogb3BpbmlvbmF0ZWQgZGVmYXVsdHNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbiAgIGh0bWwge1xyXG4gICAgY29sb3I6ICMyMjI7XHJcbiAgICBmb250LXNpemU6IDFlbTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbn1cclxuXHJcbi8qXHJcbiAqIFJlbW92ZSB0ZXh0LXNoYWRvdyBpbiBzZWxlY3Rpb24gaGlnaGxpZ2h0OlxyXG4gKiBodHRwczovL3R3aXR0ZXIuY29tL21pa2V0YXlsci9zdGF0dXMvMTIyMjg4MDUzMDFcclxuICpcclxuICogVmVuZG9yLXByZWZpeGVkIGFuZCByZWd1bGFyIDo6c2VsZWN0aW9uIHNlbGVjdG9ycyBjYW5ub3QgYmUgY29tYmluZWQ6XHJcbiAqIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xNjk4MjUxMC83MTMzNDcxXHJcbiAqXHJcbiAqIEN1c3RvbWl6ZSB0aGUgYmFja2dyb3VuZCBjb2xvciB0byBtYXRjaCB5b3VyIGRlc2lnbi5cclxuICovXHJcblxyXG46Oi1tb3otc2VsZWN0aW9uIHtcclxuICAgIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XHJcbiAgICB0ZXh0LXNoYWRvdzogbm9uZTtcclxufVxyXG5cclxuOjpzZWxlY3Rpb24ge1xyXG4gICAgYmFja2dyb3VuZDogI2IzZDRmYztcclxuICAgIHRleHQtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG4vKlxyXG4gKiBBIGJldHRlciBsb29raW5nIGRlZmF1bHQgaG9yaXpvbnRhbCBydWxlXHJcbiAqL1xyXG5cclxuaHIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgbWFyZ2luOiAxZW0gMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi8qXHJcbiAqIFJlbW92ZSB0aGUgZ2FwIGJldHdlZW4gYXVkaW8sIGNhbnZhcywgaWZyYW1lcyxcclxuICogaW1hZ2VzLCB2aWRlb3MgYW5kIHRoZSBib3R0b20gb2YgdGhlaXIgY29udGFpbmVyczpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvaXNzdWVzLzQ0MFxyXG4gKi9cclxuXHJcbmF1ZGlvLFxyXG5jYW52YXMsXHJcbmlmcmFtZSxcclxuaW1nLFxyXG5zdmcsXHJcbnZpZGVvIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbi8qXHJcbiAqIFJlbW92ZSBkZWZhdWx0IGZpZWxkc2V0IHN0eWxlcy5cclxuICovXHJcblxyXG5maWVsZHNldCB7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKlxyXG4gKiBBbGxvdyBvbmx5IHZlcnRpY2FsIHJlc2l6aW5nIG9mIHRleHRhcmVhcy5cclxuICovXHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICByZXNpemU6IHZlcnRpY2FsO1xyXG59XHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBCcm93c2VyIFVwZ3JhZGUgUHJvbXB0XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4uYnJvd3NlcnVwZ3JhZGUge1xyXG4gICAgbWFyZ2luOiAwLjJlbSAwO1xyXG4gICAgYmFja2dyb3VuZDogI2NjYztcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgcGFkZGluZzogMC4yZW0gMDtcclxufVxyXG5cclxuXHJcblxyXG5cclxuIC8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIEF1dGhvcidzIGN1c3RvbSBzdHlsZXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiAvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBIZWxwZXIgY2xhc3Nlc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLypcclxuICogSGlkZSB2aXN1YWxseSBhbmQgZnJvbSBzY3JlZW4gcmVhZGVyc1xyXG4gKi9cclxuXHJcbiAuaGlkZGVuIHtcclxuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi8qXHJcbiogSGlkZSBvbmx5IHZpc3VhbGx5LCBidXQgaGF2ZSBpdCBhdmFpbGFibGUgZm9yIHNjcmVlbiByZWFkZXJzOlxyXG4qIGh0dHBzOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XHJcbipcclxuKiAxLiBGb3IgbG9uZyBjb250ZW50LCBsaW5lIGZlZWRzIGFyZSBub3QgaW50ZXJwcmV0ZWQgYXMgc3BhY2VzIGFuZCBzbWFsbCB3aWR0aFxyXG4qICAgIGNhdXNlcyBjb250ZW50IHRvIHdyYXAgMSB3b3JkIHBlciBsaW5lOlxyXG4qICAgIGh0dHBzOi8vbWVkaXVtLmNvbS9AamVzc2ViZWFjaC9iZXdhcmUtc211c2hlZC1vZmYtc2NyZWVuLWFjY2Vzc2libGUtdGV4dC01OTUyYTRjMmNiZmVcclxuKi9cclxuXHJcbi52aXN1YWxseWhpZGRlbiB7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgbWFyZ2luOiAtMXB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcGFkZGluZzogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDFweDtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwOyAvKiAxICovXHJcbn1cclxuXHJcbi8qXHJcbiogRXh0ZW5kcyB0aGUgLnZpc3VhbGx5aGlkZGVuIGNsYXNzIHRvIGFsbG93IHRoZSBlbGVtZW50XHJcbiogdG8gYmUgZm9jdXNhYmxlIHdoZW4gbmF2aWdhdGVkIHRvIHZpYSB0aGUga2V5Ym9hcmQ6XHJcbiogaHR0cHM6Ly93d3cuZHJ1cGFsLm9yZy9ub2RlLzg5NzYzOFxyXG4qL1xyXG5cclxuLnZpc3VhbGx5aGlkZGVuLmZvY3VzYWJsZTphY3RpdmUsXHJcbi52aXN1YWxseWhpZGRlbi5mb2N1c2FibGU6Zm9jdXMge1xyXG4gIGNsaXA6IGF1dG87XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIG1hcmdpbjogMDtcclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICBwb3NpdGlvbjogc3RhdGljO1xyXG4gIHdpZHRoOiBhdXRvO1xyXG4gIHdoaXRlLXNwYWNlOiBpbmhlcml0O1xyXG59XHJcblxyXG4vKlxyXG4qIEhpZGUgdmlzdWFsbHkgYW5kIGZyb20gc2NyZWVuIHJlYWRlcnMsIGJ1dCBtYWludGFpbiBsYXlvdXRcclxuKi9cclxuXHJcbi5pbnZpc2libGUge1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG5cclxuLypcclxuKiBDbGVhcmZpeDogY29udGFpbiBmbG9hdHNcclxuKlxyXG4qIEZvciBtb2Rlcm4gYnJvd3NlcnNcclxuKiAxLiBUaGUgc3BhY2UgY29udGVudCBpcyBvbmUgd2F5IHRvIGF2b2lkIGFuIE9wZXJhIGJ1ZyB3aGVuIHRoZVxyXG4qICAgIGBjb250ZW50ZWRpdGFibGVgIGF0dHJpYnV0ZSBpcyBpbmNsdWRlZCBhbnl3aGVyZSBlbHNlIGluIHRoZSBkb2N1bWVudC5cclxuKiAgICBPdGhlcndpc2UgaXQgY2F1c2VzIHNwYWNlIHRvIGFwcGVhciBhdCB0aGUgdG9wIGFuZCBib3R0b20gb2YgZWxlbWVudHNcclxuKiAgICB0aGF0IHJlY2VpdmUgdGhlIGBjbGVhcmZpeGAgY2xhc3MuXHJcbiogMi4gVGhlIHVzZSBvZiBgdGFibGVgIHJhdGhlciB0aGFuIGBibG9ja2AgaXMgb25seSBuZWNlc3NhcnkgaWYgdXNpbmdcclxuKiAgICBgOmJlZm9yZWAgdG8gY29udGFpbiB0aGUgdG9wLW1hcmdpbnMgb2YgY2hpbGQgZWxlbWVudHMuXHJcbiovXHJcblxyXG4uY2xlYXJmaXg6YmVmb3JlLFxyXG4uY2xlYXJmaXg6YWZ0ZXIge1xyXG4gIGNvbnRlbnQ6IFwiIFwiOyAvKiAxICovXHJcbiAgZGlzcGxheTogdGFibGU7IC8qIDIgKi9cclxufVxyXG5cclxuLmNsZWFyZml4OmFmdGVyIHtcclxuICBjbGVhcjogYm90aDtcclxufVxyXG5cclxuIFxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBFWEFNUExFIE1lZGlhIFF1ZXJpZXMgZm9yIFJlc3BvbnNpdmUgRGVzaWduLlxyXG4gICBUaGVzZSBleGFtcGxlcyBvdmVycmlkZSB0aGUgcHJpbWFyeSAoJ21vYmlsZSBmaXJzdCcpIHN0eWxlcy5cclxuICAgTW9kaWZ5IGFzIGNvbnRlbnQgcmVxdWlyZXMuXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4gICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDM1ZW0pIHtcclxuICAgIC8qIFN0eWxlIGFkanVzdG1lbnRzIGZvciB2aWV3cG9ydHMgdGhhdCBtZWV0IHRoZSBjb25kaXRpb24gKi9cclxufVxyXG5cclxuQG1lZGlhIHByaW50LFxyXG4gICAgICAgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMS4yNSksXHJcbiAgICAgICAobWluLXJlc29sdXRpb246IDEuMjVkcHB4KSxcclxuICAgICAgIChtaW4tcmVzb2x1dGlvbjogMTIwZHBpKSB7XHJcbiAgICAvKiBTdHlsZSBhZGp1c3RtZW50cyBmb3IgaGlnaCByZXNvbHV0aW9uIGRldmljZXMgKi9cclxufVxyXG5cclxuIFxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBQcmludCBzdHlsZXMuXHJcbiAgIElubGluZWQgdG8gYXZvaWQgdGhlIGFkZGl0aW9uYWwgSFRUUCByZXF1ZXN0OlxyXG4gICBodHRwczovL3d3dy5waHBpZWQuY29tL2RlbGF5LWxvYWRpbmcteW91ci1wcmludC1jc3MvXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4gICBAbWVkaWEgcHJpbnQge1xyXG4gICAgKixcclxuICAgICo6YmVmb3JlLFxyXG4gICAgKjphZnRlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgICAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50OyAvKiBCbGFjayBwcmludHMgZmFzdGVyICovXHJcbiAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgYSxcclxuICAgIGE6dmlzaXRlZCB7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcblxyXG4gICAgYVtocmVmXTphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7XHJcbiAgICB9XHJcblxyXG4gICAgYWJiclt0aXRsZV06YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcclxuICAgIH1cclxuXHJcbiAgICAvKlxyXG4gICAgICogRG9uJ3Qgc2hvdyBsaW5rcyB0aGF0IGFyZSBmcmFnbWVudCBpZGVudGlmaWVycyxcclxuICAgICAqIG9yIHVzZSB0aGUgYGphdmFzY3JpcHQ6YCBwc2V1ZG8gcHJvdG9jb2xcclxuICAgICAqL1xyXG5cclxuICAgIGFbaHJlZl49XCIjXCJdOmFmdGVyLFxyXG4gICAgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgfVxyXG5cclxuICAgIHByZSB7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IHByZS13cmFwICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICBwcmUsXHJcbiAgICBibG9ja3F1b3RlIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xyXG4gICAgICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcclxuICAgIH1cclxuXHJcbiAgICAvKlxyXG4gICAgICogUHJpbnRpbmcgVGFibGVzOlxyXG4gICAgICogaHR0cDovL2Nzcy1kaXNjdXNzLmluY3V0aW8uY29tL3dpa2kvUHJpbnRpbmdfVGFibGVzXHJcbiAgICAgKi9cclxuXHJcbiAgICB0aGVhZCB7XHJcbiAgICAgICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xyXG4gICAgfVxyXG5cclxuICAgIHRyLFxyXG4gICAgaW1nIHtcclxuICAgICAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XHJcbiAgICB9XHJcblxyXG4gICAgcCxcclxuICAgIGgyLFxyXG4gICAgaDMge1xyXG4gICAgICAgIG9ycGhhbnM6IDM7XHJcbiAgICAgICAgd2lkb3dzOiAzO1xyXG4gICAgfVxyXG5cclxuICAgIGgyLFxyXG4gICAgaDMge1xyXG4gICAgICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuIiwiLm11bmNhay1idG4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbXVuY2FrLWJsdWU7XG4gIHBhZGRpbmc6IDI4cHggNzBweDtcbiAgYm9yZGVyLXJhZGl1czogNDBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBjb2xvcjogJG11bmNhay13aGl0ZTtcbiAgYm94LXNoYWRvdzogMHB4IDIxcHggMjhweCAxcHggcmdiYSgkbXVuY2FrLWJsdWUsMC4yNSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7XG4gICY6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6IDBweCAyMXB4IDI4cHggMXB4IHJnYmEoJG11bmNhay1ibHVlLDAuMzUpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJG11bmNhay1ibHVlLCA1JSk7XG4gIH1cbn0iLCIubXVuY2FrLXRpdGxlcyB7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBjb2xvcjogJG11bmNhay1ncmV5O1xufSIsIi5hY3Rpb24tY2FyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICB9XG59XG4uYWN0aW9uLWNhcmRfX3dyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAzNjBweDtcbiAgYmFja2dyb3VuZDogJG11bmNhay13aGl0ZTtcbiAgaGVpZ2h0OiAyNzBweDtcbiAgcGFkZGluZzogMzJweCA2NHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMnB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwcHggMHB4IDkwcHggLTEycHggcmdiYSgkbXVuY2FrLWJsdWUsMC4yKTtcbn1cblxuLmFjdGlvbi1jYXJkX190ZXh0LWJveCB7XG4gIGgyIHtcbiAgICBmb250LXNpemU6IDEuN3JlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAzMnB4O1xuICAgIGNvbG9yOiAkbXVuY2FrLWdyZXk7XG4gIH1cbiAgcCB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIGNvbG9yOiAkbXVuY2FrLWdyZXk7XG4gICAgZm9udC13ZWlnaHQ6IDEwMFxuICB9XG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IC00MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvaGVhZGVyLnBuZ1wiKTtcbiAgfVxufSIsIi5udW1iZXItY2FyZCB7XG4gIG1heC13aWR0aDogMzUwcHg7XG59XG5cbi5udW1iZXItY2FyZF9fdGV4dCB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgY29sb3I6ICRtdW5jYWstZ3JleTtcbiAgbWFyZ2luOiAwO1xufVxuXG4ubnVtYmVyLWNhcmRfX3ZhbHVlcyB7XG4gIGNvbG9yOiBkYXJrZW4oJG11bmNhay1ibHVlLCAxMCUpO1xuICBmb250LXNpemU6IDIuNnJlbTtcbiAgbWFyZ2luOiA2cHggMDtcbn0iLCIubmV3cy1jYXJkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJG11bmNhay13aGl0ZTtcbiAgbWF4LXdpZHRoOiAzNTBweDtcbiAgaGVpZ2h0OiA2ODBweDtcbiAgYm9yZGVyLXJhZGl1czogMThweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4MHB4IC0xMHB4IHJnYmEoJG11bmNhay1ibHVlLCAwLjQpO1xufVxuXG4ubmV3cy1jYXJkX19pbWcge1xuICBoZWlnaHQ6IDIyNXB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvY2FyZDAxLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuLm5ld3MtY2FyZF9fdGV4dC1ib3gge1xuICBwYWRkaW5nOiAxMnB4IDMycHg7XG59XG5cbi8qXG5Vc2UgZnJvbnQtZW5kIG9yIGJhY2stZW5kIEpTIGhlcmUgZm9yIHRleHQgYmV0dGVyIHByZXNlbnRhdGlvbiBcbndpdGggbWF4IG51bWJlciBvZiBjaGFyYWN0ZXJzIGFuZCBlbGxpcHNlc1xuKi9cbi5uZXdzLWNhcmRfX3RpdGxlLWJveCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGhlaWdodDogMTUwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuXG4ubmV3cy1jYXJkX190aXRsZSB7XG4gIGNvbG9yOiAkbXVuY2FrLWdyZXk7XG4gIGZvbnQtc2l6ZTogMS43cmVtO1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxuXG4vKlxuVXNlIGZyb250LWVuZCBvciBiYWNrLWVuZCBKUyBoZXJlIGZvciB0ZXh0IGJldHRlciBwcmVzZW50YXRpb24gXG53aXRoIG1heCBudW1iZXIgb2YgY2hhcmFjdGVycyBhbmQgZWxsaXBzZXNcbiovXG4ubmV3cy1jYXJkX19kZXNjcmlwdGlvbi1ib3gge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBoZWlnaHQ6IDIzMHB4O1xufVxuXG4ubmV3cy1jYXJkX19kZXNjcmlwdGlvbiB7XG4gIGNvbG9yOiAkbXVuY2FrLXRleHQtY29sb3I7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xufVxuXG4ubmV3cy1jYXJkX19tb3JlIHtcbiAgY29sb3I6ICRtdW5jYWstYmx1ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAxMnB4O1xufSIsIi5oZWFkZXJfX3dyYXBwZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbXVuY2FrLWRhcmstYmx1ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlYWRlcl9fbG9nbyB7XG4gIGZsZXg6IDE7XG59XG5cbi5oZWFkZXJfX2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93XG59XG4uaGVhZGVyX19saXN0LWl0ZW0ge1xuICBtYXJnaW46IDAgMThweDtcbiAgY29sb3I6ICRtdW5jYWstd2hpdGU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGVhZGVyX19saW5rIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgJjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBsZWZ0OiAtMTAlO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogLTEyMCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMjAlO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRtdW5jYWstd2hpdGU7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAmOmhvdmVyIHtcbiAgICAmOmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgfVxufVxuLmhlYWRlcl9fbG9naW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbXVuY2FrLXdoaXRlO1xuICBwYWRkaW5nOiA5cHggMzRweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgY29sb3I6JG11bmNhay1kYXJrLWJsdWU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAmOmhvdmVyIHtcbiAgICBjb2xvcjogbGlnaHRlbigkbXVuY2FrLWRhcmstYmx1ZSwgMzAlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgfVxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbn0iLCIuaGVyb19fd3JhcHBlciB7XG4gIG1hcmdpbi10b3A6IDY0cHg7XG4gIG1hcmdpbi1sZWZ0OiA2NHB4O1xuICB3aWR0aDogNDAwcHg7XG59XG4uaGVyb19fdGV4dC1ib3gge1xuICBtYXJnaW4tYm90dG9tOiAxMjhweDtcbn1cbi5oZXJvX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMy4ycmVtO1xuICBsaW5lLWhlaWdodDogMTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAkbXVuY2FrLWRhcmstYmx1ZTtcbn1cbi5oZXJvX190ZXh0IHtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICBsaW5lLWhlaWdodDogMS44O1xuICBjb2xvcjogJG11bmNhay10ZXh0LWNvbG9yO1xufVxuLy8gLmhlcm9fX2J1dHRvbiIsIi5hY3Rpb25zX193cmFwcGVyIHtcbiAgcGFkZGluZy10b3A6IDUwMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uYWN0aW9uc19fdGl0bGUtd3JhcHBlciB7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uYWN0aW9uc19fY2FyZHMge1xuICBtYXJnaW4tdG9wOiAyMDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmFjdGlvbnNfX2J1dHRvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAxNTBweDtcbiAgcmlnaHQ6IDEwMHB4O1xufSIsIi5udW1iZXJzX193cmFwcGVyIHtcbiAgcGFkZGluZy10b3A6IDE0MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5udW1iZXJzX190aXRsZS13cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ubnVtYmVyc19fdGl0bGUge1xuICBtYXJrZXItYm90dG9tOiAxMDBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLm51bWJlcnNfX2NhcmRzIHtcbiAgcGFkZGluZzogMCA2NHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgKiB7XG4gICAgZmxleDogMTtcbiAgfVxufSIsIi5uZXdzX193cmFwcGVyIHtcbiAgcGFkZGluZy10b3A6IDE1MHB4O1xufVxuLm5ld3NfX3RpdGxlLXdyYXBwZXIge1xuICBtYXJnaW4tYm90dG9tOiAxMDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBoMiB7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIH1cbn1cbi5uZXdzX19jYXJkcyB7XG4gIHBhZGRpbmc6IDAgNjRweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICoge1xuICAgIGZsZXg6IDE7XG4gIH1cbn0iLCIuc3Vic2NyaWJlX193cmFwcGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcbiAgbWF4LXdpZHRoOiAxODAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIHBhZGRpbmc6IDMycHggMjQwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwcHg7XG59XG5cbi5zdWJzY3JpYmVfX2lucHV0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBib3JkZXI6IG5vbmU7XG59XG5cbi5zdWJzY3JpYmVfX3RpdGxlLXdyYXBwZXIge1xuICBjb2xvcjogJG11bmNhay13aGl0ZTtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIG1hcmdpbjogNDBweCAwIDc0cHggMDtcbn1cblxuLnN1YnNjcmliZV9faW5wdXRbdHlwZT1cInRleHRcIl0sXG4uc3Vic2NyaWJlX19pbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbXVuY2FrLXdoaXRlO1xuICB3aWR0aDogOTAlO1xuICBoZWlnaHQ6IDY0cHg7XG4gIG1heC13aWR0aDogNTgwcHg7XG4gIG1hcmdpbi1ib3R0b206IDQ0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDE4cHg7XG4gIHBhZGRpbmctbGVmdDogMzJweDtcbiAgZm9udC1zaXplOiAxLjdyZW07XG59XG4uc3Vic2NyaWJlX19pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJG11bmNhay1icmlnaHQtYmx1ZTtcbiAgbWFyZ2luOiA2NHB4IGF1dG8gMTAwcHggYXV0bztcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkbXVuY2FrLWJyaWdodC1ibHVlLCAxMCUpO1xuICB9XG59IiwiQGltcG9ydCAnYmFzZS9ub3JtYWxpemUuc2Nzcyc7XG5AaW1wb3J0ICdiYXNlL3Jlc2V0LnNjc3MnO1xuQGltcG9ydCAndmFyaWFibGVzL2NvbG9ycy5zY3NzJztcblxuQGltcG9ydCAnY29tcG9uZW50cy9NdW5jYWtCdG4uc2Nzcyc7XG5AaW1wb3J0ICdjb21wb25lbnRzL011bmNha1RpdGxlcy5zY3NzJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvQWN0aW9uQ2FyZC5zY3NzJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvTnVtYmVyQ2FyZC5zY3NzJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvTmV3c0NhcmQuc2Nzcyc7XG5cbkBpbXBvcnQgJ21vZHVsZXMvSGVhZGVyLnNjc3MnO1xuQGltcG9ydCAnbW9kdWxlcy9IZXJvLnNjc3MnO1xuQGltcG9ydCAnbW9kdWxlcy9BY3Rpb25zLnNjc3MnO1xuQGltcG9ydCAnbW9kdWxlcy9OdW1iZXJzLnNjc3MnO1xuQGltcG9ydCAnbW9kdWxlcy9OZXdzLnNjc3MnO1xuQGltcG9ydCAnbW9kdWxlcy9TdWJzY3JpYmUuc2Nzcyc7XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbXVuY2FrLXdoaXRlO1xuICBwYWRkaW5nOiA0OHB4IDEyNHB4O1xufSJdfQ== */
