/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}/*! HTML5 Boilerplate v6.1.0 | MIT License | https://html5boilerplate.com/ */html{color:#222;font-size:1em;line-height:1.4}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0;padding:0}audio,canvas,iframe,img,svg,video{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.browserupgrade{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}.hidden{display:none!important}.visuallyhidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.visuallyhidden.focusable:active,.visuallyhidden.focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto;white-space:inherit}.invisible{visibility:hidden}.clearfix:after,.clearfix:before{content:" ";display:table}.clearfix:after{clear:both}@media print{*,:after,:before{background:0 0!important;color:#000!important;-webkit-box-shadow:none!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}a[href^="#"]:after,a[href^="javascript:"]:after{content:""}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}.muncak-btn{background-color:#2870db;padding:28px 70px;border-radius:40px;font-weight:700;font-size:1.4rem;color:#fbfcfc;-webkit-box-shadow:0 21px 28px 1px rgba(40,112,219,.25);box-shadow:0 21px 28px 1px rgba(40,112,219,.25);cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.muncak-btn:hover{-webkit-box-shadow:0 21px 28px 1px rgba(40,112,219,.35);box-shadow:0 21px 28px 1px rgba(40,112,219,.35);background-color:#3e7fdf}.muncak-titles{font-size:2.5rem;color:#35434b}.action-card{position:relative;text-align:left;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.action-card:nth-child(even){-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.action-card__wrapper{position:relative;width:360px;background:#fbfcfc;height:270px;padding:32px 64px;margin-bottom:32px;border-radius:20px;-webkit-box-shadow:0 0 90px -12px rgba(40,112,219,.2);box-shadow:0 0 90px -12px rgba(40,112,219,.2)}.action-card__text-box h2{font-size:1.7rem;margin-bottom:32px;color:#35434b}.action-card__text-box p{font-size:1.2rem;text-align:justify;line-height:1.5;color:#35434b;font-weight:100}.action-card__text-box:after{content:"";position:absolute;top:-40%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);width:100px;height:100px;background-size:cover;background-image:url(../img/header.png)}.number-card{max-width:350px}.number-card__text{text-transform:capitalize;font-size:1.5rem;color:#35434b;margin:0}.number-card__values{color:#1e59b2;font-size:2.6rem;margin:6px 0}.news-card{margin:0 24px;background-color:#fbfcfc;max-width:350px;height:680px;border-radius:18px;overflow:hidden;-webkit-box-shadow:0 0 80px -10px rgba(40,112,219,.4);box-shadow:0 0 80px -10px rgba(40,112,219,.4)}.news-card__img{height:225px;background-image:url(../img/card01.png);background-repeat:no-repeat;background-size:cover}.news-card__text-box{padding:12px 32px}.news-card__title-box{overflow:hidden;height:150px;text-transform:capitalize}.news-card__title{color:#35434b;font-size:1.7rem;line-height:1.2}.news-card__description-box{overflow:hidden;height:230px}.news-card__description{color:#756d91;font-size:1.3rem}.news-card__more{color:#2870db;cursor:pointer;font-size:1.2rem;font-weight:700;position:relative;top:12px}.link-card{max-width:250px;background-color:#2870db}.link-card__title{text-transform:uppercase;font-size:1.2rem;font-weight:100;color:#fbfcfc}.link-card__list{list-style:none;margin:0;padding:0}.link-card__list-item{margin-bottom:24px}.link-card__text{color:#fbfcfc;cursor:pointer;line-height:1.6}.header__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__logo{-webkit-box-flex:1;-ms-flex:1;flex:1}.header__logo-img{width:160px;height:auto}.header__navbar{z-index:10}.header__navbar:after{content:"";position:absolute;width:1000px;height:auto;background-image:url(../img/header.png);background-size:contain;background-repeat:no-repeat;top:0;bottom:0;right:-153px;z-index:-1}.header__list{list-style:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.header__list-item{margin:0 18px;color:#fbfcfc;cursor:pointer;font-weight:700}.header__link{-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s;position:relative}.header__link:after{content:"";left:-10%;right:0;bottom:-120%;position:absolute;width:120%;height:1px;background-color:#fbfcfc;display:none;z-index:10}.header__link:hover:after{display:block}.header__login{background-color:#fbfcfc;padding:9px 34px;border-radius:10px;color:#1c2056;font-weight:700;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.header__login:hover{color:#4850c3;background-color:#fff}.hero{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.hero:after{content:"";position:absolute;height:670px;width:180px;z-index:-1;background-image:url(../img/bg-shape01.svg);background-size:contain;background-repeat:no-repeat;left:0;top:260px}.hero__wrapper{position:relative;margin-top:64px;max-width:400px;-webkit-box-flex:8;-ms-flex:8;flex:8}.hero__column{-webkit-box-flex:2;-ms-flex:2;flex:2;max-width:800px;height:100px}.hero__text-box{margin-bottom:128px}.hero__title{font-size:3.2rem;line-height:1.2;font-weight:700;color:#1c2056}.hero__text{font-size:1.25rem;text-align:justify;line-height:1.8;color:#756d91}.actions__wrapper{max-width:1000px;padding-top:500px;text-align:center;margin:0 auto}.actions__title-wrapper{max-width:820px;margin:0 auto;text-align:center}.actions__cards{margin-top:200px;position:relative}.actions__button{position:absolute;bottom:150px;right:100px}.numbers__wrapper{padding-top:140px;text-align:center}.numbers__title-wrapper{max-width:1000px;margin:0 auto}.numbers__title{marker-bottom:100px;margin-bottom:50px}.numbers__cards{padding:0 64px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.numbers__cards *{-webkit-box-flex:1;-ms-flex:1;flex:1}.news__wrapper{padding-top:150px}.news__title-wrapper{margin-bottom:100px;text-align:center}.news__title-wrapper h2{text-transform:capitalize}.news__cards{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.news__cards *{-webkit-box-flex:1;-ms-flex:1;flex:1}.subscribe__wrapper{background-color:#00f;max-width:1800px;border-radius:16px;padding:32px 240px;text-align:center;margin-top:200px}.subscribe__input{display:block;margin:0 auto;border:none}.subscribe__title-wrapper{color:#fbfcfc;font-size:1.6rem;line-height:1.2;margin:40px 0 74px 0}.subscribe__input[type=email],.subscribe__input[type=text]{background-color:#fbfcfc;width:90%;height:64px;max-width:580px;margin-bottom:44px;border-radius:18px;padding-left:32px;font-size:1.7rem}.subscribe__input[type=submit]{background-color:#00aeff;margin:64px auto 80px auto}.subscribe__input[type=submit]:hover{background-color:#33beff}.links__wrapper{margin-top:80px}.links__cards{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.links__cards *{-webkit-box-flex:1;-ms-flex:1;flex:1}.social__wrapper{margin:80px 0}.social__list{margin:0;padding:0;background-color:#1c2056;list-style:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.social__list-item{height:50px;margin-right:8px}.social__list-item svg{cursor:pointer;height:100%;width:auto}.social__list-item:hover .svg__path{-webkit-transition:all .3s ease-in-out;-o-transition:all .3s ease-in-out;transition:all .3s ease-in-out;fill:#95b9ed}body{margin:0 auto;padding:48px 124px;max-width:1920px;background-color:#fbfcfc;overflow-x:hidden;font-family:'Open Sans',sans-serif}@media only screen and (min-width:1501px) and (max-width:1920px){.action-card__text-box:after{left:50%}}@media screen and (max-width:1500px){body{padding:24px 36px}.header__navbar:after{width:720px}.hero:after{height:calc(670px / 1.5);width:calc(180px / 1.5);left:0;top:260px}.hero__column{max-width:550px}.hero__title{margin:12px 0;font-size:2.4rem}.actions__wrapper{padding-top:170px}.action-card__text-box:after{-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%)}.subscribe__wrapper{padding:12px 100px;margin-top:150px}.subscribe__title-wrapper{color:#fbfcfc;font-size:.9rem;line-height:1;margin:20px 0 12px 0}.subscribe__input[type=email],.subscribe__input[type=text]{width:90%;height:42px;margin-bottom:20px;border-radius:12px;padding-left:16px;font-size:1.2rem}.subscribe__input[type=submit]{margin:32px auto 12px auto;padding:16px 32px}}@media screen and (max-width:1140px){.muncak-titles{font-size:1.8rem}.muncak-btn{padding:18px 48px;font-size:1.2rem}body{padding:8px 16px}.hero__wrapper{max-width:300px}.header__navbar:after{width:635px}.hero:after{display:none}.hero__title{font-size:2rem}.hero__text-box{margin-bottom:60px}.hero__text{font-size:1rem}.actions__wrapper{padding-top:250px}.action-card__text-box:after{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);top:8px;right:10px}.actions__button{position:inherit;top:24px;right:0}.news__wrapper{padding-top:100px}.news__title-wrapper{margin-bottom:50px}.news-card{margin:0 4px;height:560px}.news-card__text-box{padding:6px 16px}.news-card__title-box{height:90px}.news-card__title{font-size:1.2rem}.news-card__description-box{height:172px}.news-card__description{font-size:1rem}.links__wrapper{margin-top:40px}.link-card__title{font-size:.9rem}.link-card__text{font-size:.85rem}}@media screen and (max-width:820px){.header__logo-img{width:100px}.hero{margin-top:400px}.actions__wrapper{padding-top:150px}.numbers__cards{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.number-card{margin-bottom:24px;padding:24px 64px;-webkit-box-shadow:0 0 40px -5px rgba(40,112,219,.2);box-shadow:0 0 40px -5px rgba(40,112,219,.2)}.news__wrapper{padding-top:30px}.news__title-wrapper{margin-bottom:20px}.news__cards{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.news-card{height:425px;max-width:500px;margin-bottom:24px;-webkit-box-shadow:0 0 60px -12px rgba(40,112,219,.4);box-shadow:0 0 60px -12px rgba(40,112,219,.4)}.news-card__title-box{height:65px}.news-card__description-box{height:85px}.subscribe__wrapper{margin-top:50px;padding:12px 30px}.link-card__title{font-size:.8rem}.link-card__text{font-size:.75rem}}@media screen and (max-width:670px){.header__logo-img{margin-bottom:150px;width:80px}.muncak-titles{font-size:1.5rem;line-height:1.2}.header__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.header__list-item{text-align:right;margin:12px 12px 8px 0;font-size:1.3rem}.header__link:hover:after{display:none}.header__login{background-color:transparent;border:solid #fbfcfc 1px;padding:4px 6px;border-radius:0;color:#fbfcfc;font-weight:700;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.header__login:hover{color:#1c2056;background-color:transparent}.header__navbar:after{width:270px;right:0}.hero{margin-top:20px}.hero__wrapper{margin:32px 0 0 0;width:100%}.hero__title{margin:12px 0;font-size:2.8rem}.hero__text{font-size:1rem}.hero__text-box{margin-bottom:48px}.actions__wrapper{padding-top:70px}.action-card__wrapper{padding:32px 16px 8px 16px;height:240px}.action-card__wrapper h2{font-size:1.4rem}.action-card__wrapper p{font-size:1rem}.numbers__wrapper{padding-top:100px}.subscribe__title{font-size:1rem}.links__cards{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.link-card h3{font-size:1rem}.link-card a{font-size:.9rem}.social__wrapper{margin:12px 0}.social__list-item{height:32px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
